##  DO NOT USE THIS SPEC FILE TO PRODUCE FINAL RPMS
##  IT IS HERE AS A DEBUGGING CONVENIENCE 
##
##  When something is broken with rpmbuild, each invocation will still
##  rerun the entire build, wasting a lot of time
##  this spec file produces a working but "fake" build where the
##  building of the package is circumvented, and where, instead
##  files are copied into the working (unpacked) build source tree
##  from an existing build, as specified by DYNINST_ROOT.
##
##  Can save a lot of time when trying to debug problems.

%define version 6.0
%define dwarf_ver 20090324
%define xml2_ver 2.7.2

Summary: An API for Runtime Code Generation
License: Copyright 1996-2006 Barton P. Miller
Name: dyninst
Group: Development/Libraries
Prefix: %_usr
Provides: dyninst
Release: 1
Source: dyninst-%{version}.tar.gz
URL: http://www.dyninst.org
Version: %version
Packager: <bugs@dyninst.org>
Exclusiveos: linux

Source0: dyninst-%{version}.tar.gz
Source1: libdwarf-%{dwarf_ver}.tar.gz

%description

Dyninst is an Application Program Interface (API) to permit the insertion of
code into a running program. The API also permits changing or removing
subroutine calls from the application program. Runtime code changes are
useful to support a variety of applications including debugging, performance
monitoring, and to support composing applications out of existing packages.
The goal of this API is to provide a machine independent interface to permit
the creation of tools and applications that use runtime code patching.

%prep

%define platform %{_arch}-unknown-linux2.4

%define _lib lib/dyninst

%setup -q
%setup -q -T -D -a 1

%build

cp /usr/src/redhat/SOURCES/dwarf-%{dwarf_ver}/libdwarf/libdwarf.so dwarf-%{dwarf_ver}/libdwarf

cat > make.config.local << RPMEOF
LIBDWARFDIR = %{_builddir}/%{buildsubdir}/dwarf-%{dwarf_ver}/libdwarf
LIBDWARF_INC = %{_builddir}/%{buildsubdir}/dwarf-%{dwarf_ver}/libdwarf
LIBDWARF_LIB = %{_builddir}/%{buildsubdir}/dwarf-%{dwarf_ver}/libdwarf
LIBELFDIR = %_libdir
TCLTK_DIR = %_usr
LIBXML2_INC = %{_builddir}/%{buildsubdir}/libxml2-%{xml2_ver}/include
RPMEOF

mkdir %{platform}

cp -R $DYNINST_ROOT/$PLATFORM/bin %{platform}
cp -R $DYNINST_ROOT/$PLATFORM/lib %{platform}
cp -R $DYNINST_ROOT/include .

%install

%__install -d %{_includedir}/dyninst
%__install -d %{_includedir}/dyninst/dyn_detail
%__install -d %{_libdir}

cd dwarf-%{dwarf_ver}/libdwarf; 
%__install libdwarf.so %{_libdir}
cd ../..

cd %{platform}/bin
%__install parseThat %{_bindir}
cd ../lib
%__install libcommon.so %{_libdir}
%__install libdyninstAPI_RT.so.1 %{_libdir}
%__install libdyninstAPI.so %{_libdir}
%__install libsymtabAPI.so %{_libdir}
%__install libinstructionAPI.so %{_libdir}
%__install libstackwalk.so %{_libdir}
cd ../../include
cp -R dyn_detail %{_includedir}/dyninst
%__install *.h %{_includedir}/dyninst

%clean

rm -rf $RPM_BUILD_ROOT

%files

%{_includedir}/dyninst
%{_libdir}
%{_bindir}/parseThat

%{_libdir}/libdyninstAPI_RT.so.1

%{_libdir}/libstackwalk.so

%{_libdir}/libdyninstAPI.so
%{_libdir}/libsymtabAPI.so
%{_libdir}/libcommon.so
%{_libdir}/libinstructionAPI.so
%doc dyninstProgGuide.pdf 

