#!/bin/sh
# $Id: files_PD,v 1.15 1999/10/26 15:10:24 wylie Exp $
# list (or otherwise examine) all Paradyn/Dyninst executable/library files

SOS=sparc-sun-sunos4.1.3
SOL=sparc-sun-solaris2.4
USS=sparc-sun-solaris2.6
X86=i386-unknown-solaris2.5
SP2=rs6000-ibm-aix4.1
#HPX=hppa1.1-hp-hpux
WNT=i386-unknown-nt4.0
LNX=i386-unknown-linux2.0
IRX=mips-sgi-irix6.4
OSF=alpha-dec-osf4.0

ALL_PLATFORMS="$USS $SOL $X86 $LNX $IRX $SP2 $WNT"
ARCH_LIST=$PLATFORM

#USAGE="usage: files_PD [-a] [-w] [-i|-t] [-C[dlopvx]] [platform-list]\n\
#   -C_comps_: consider only the components matching the _comps_ key\n\
#     o: miscellaneous objects\n\
#     v: visualizers/visis\n\
USAGE="usage: files_PD [-a] [-w] [-W dir] [-i|-t] [-d|-l|-p|-x] [platform-list]\n\
   -a: consider all supported platforms (instead of optional platform-list)\n\
   -w: use developer's work repository (instead of default common repository)\n\
   -W: use specified directory as the repository\n\
   -i: show ident_PD information (instead of default file listing)\n\
   -t: only list stale files (i.e., those not dated today)\n\
   -d: DyninstAPI components only\n\
   -l: libraries/objects only\n\
   -p: Paradyn components only\n\
   -x: executables only\n\
   platform-list: one or more platforms (defaults to only current platform)\n\
(current PLATFORM=$PLATFORM)\n\
(supported platforms: $ALL_PLATFORMS)\n"

if [ "$PARADYN_ROOT" = "" ]; then
    P_ROOT="/p/paradyn"
else
    P_ROOT=`dirname $PARADYN_ROOT`
    # remove "/development/$USER" suffix, if present
    TMP=`dirname $P_ROOT`
    if [ `basename $TMP` = "development" ]; then
        P_ROOT=`dirname $TMP`
    fi
fi

FILTER="cat"

if [ $PLATFORM = "$SP2" -o $PLATFORM = "$OSF" ]; then
    ACTION="ls -oLF"
else
    ACTION="ls -lGLF"
fi

tmp_file="/tmp/.tmp_file"

X_COMPS=true
L_COMPS=true

while [ -n "$1" ]
do
  case "$1" in
    "-C")
        # consider only listed components
        ;;
    "-x")
        # consider only executables
        X_COMPS=true
        L_COMPS=
        ;;
    "-l")
        # consider only libraries
        X_COMPS=
        L_COMPS=true
        ;;
    "-d")
        # consider only dynInstAPI components
        X_COMPS=
        L_COMPS=true
        D_COMPS=true
        ;;
    "-p")
        # consider only Paradyn components
        X_COMPS=
        L_COMPS=true
        D_COMPS=false
        ;;
    "-a")
        # consider all (current) platforms
        ARCH_LIST=$ALL_PLATFORMS
        ;;
    "-w")
        # use developer's work repository
        if [ -n "$USER" -a "$USER" != "paradyn" ]; then
            P_ROOT=$P_ROOT/development/$USER
        else
            echo "Sorry, no developer repository for USER=$USER"
        fi
        ;;
    "-W")
        # use specified work repository
        if [ -d "$2" ]; then
            P_ROOT=$2
            shift
        else
            echo "Sorry, $2 is not a repository"
        fi
        ;;
    "-i")
        # show ident info (assumes ident_PD is available)
        #ACTION=$P_ROOT/scripts/ident_PD
        IDENT_ACTION=true
        ;;
    "-t")
        # time to check or rebuild a stale file
        CHECK_FRESH=true
        ;;
    "-"*)
        #echo "Unrecognized flag: $1"
        PRINT_USAGE=true
        ;;
    *)
        # any non-flag arguments are platforms to consider
        ARCH_LIST=$*
        break
        ;;
  esac
  shift
done

if [ $PLATFORM = "$WNT" ]; then
    P_ROOT="/$P_ROOT"
fi

if [ -n "$PRINT_USAGE" ]; then
    printf "$USAGE"
    exit 1
fi

if [ -n "$IDENT_ACTION" ]; then
    if [ $PLATFORM = "$WNT" ]; then
        ACTION="sh $P_ROOT/scripts/ident_PD"
    else
        ACTION="$P_ROOT/scripts/ident_PD"
    fi
elif [ -n "$CHECK_FRESH" ]; then
    TODAY=`date '+%b %e'`
    date '+%b %e' > $tmp_file
    TODAY="($TODAY)"
    FILTER="grep -v -f $tmp_file"
fi

V_COMPS="rthist barChart phaseTable tableVisi tclVisi terrain"
V_COMPS_WNT="rthist.exe barChart.exe phaseTable.exe tableVisi.exe tclVisi.exe"
ALL_UNX_EXES="paradyn paradynd* igen $V_COMPS"
ALL_WNT_EXES="paradyn.exe paradynd.exe igen.exe $V_COMPS_WNT"

ALL_API_OBJS="libdyninstAPI.* libdyninstAPI_RT*"
ALL_LIB_OBJS="libdyninstRT* libpdutil.a libpdthread.a libvisi.a"
ALL_BLK_OBJS="DYNINSTendCode.o DYNINSTstartCode.o"
ALL_CPP_OBJS="libdyninstCP.*"
ALL_IRX_LIBS="libdyninstRT.so.1 libdyninstRT_n32.so.1 libpdutil.a \
              libdyninstAPI.so libdyninstAPI_RT.so.1 libdyninstAPI_RT_n32.so.1"
ALL_OSF_LIBS="libpdutil.a $ALL_API_OBJS"
        
# decide whether to include DyninstAPI components in library list
case "$D_COMPS" in
  false)
    ALL_UNX_LIBS="$ALL_LIB_OBJS"
    ALL_WNT_LIBS="libpdutil.lib libpdthread.lib libvisi.lib libdyninstRT.dll"
    ;;
  true)
    ALL_UNX_LIBS="$ALL_API_OBJS"
    ALL_WNT_LIBS="libdyninstAPI.lib libdyninstAPI_RT.dll"
    ;;
  *)
    ALL_UNX_LIBS="$ALL_LIB_OBJS $ALL_API_OBJS"
    ALL_WNT_LIBS="libpdutil.lib libpdthread.lib libvisi.lib libdyninstRT.dll libdyninstAPI.lib libdyninstAPI_RT.dll"
    ;;
esac

for PLATFORM in $ARCH_LIST
do
    printf "\nPLATFORM=%-22s %8s\n" $PLATFORM "$TODAY"
    if [ -n "$X_COMPS" ]; then
        PROGRAM_DEST=$P_ROOT/bin/$PLATFORM
        if [ ! -d $PROGRAM_DEST ]; then       
            echo "$PROGRAM_DEST does not exist!"
        else
            cd $PROGRAM_DEST ; echo "[7m$PROGRAM_DEST[m"
            case $PLATFORM in
              $OSF)
                echo "(no executables yet!)" ;;
              $WNT)
                $ACTION $ALL_WNT_EXES | $FILTER ;;
              *)
                $ACTION $ALL_UNX_EXES | $FILTER ;;
            esac
        fi
    fi
    if [ -n "$L_COMPS" ]; then
        LIBRARY_DEST=$P_ROOT/lib/$PLATFORM
        if [ ! -d $LIBRARY_DEST ]; then       
            echo "$LIBRARY_DEST does not exist!"
        else
            cd $LIBRARY_DEST ; echo "[7m$LIBRARY_DEST[m"
            case $PLATFORM in
              $OSF)
                $ACTION $ALL_OSF_LIBS | $FILTER
                ;;
              $IRX)
                $ACTION $ALL_IRX_LIBS | $FILTER
                ;;
              $WNT)
                $ACTION $ALL_WNT_LIBS | $FILTER
                ;;
              $SP2)
                $ACTION $ALL_UNX_LIBS | $FILTER
                if [ "$D_COMPS" != "true" ]; then
                $ACTION $ALL_BLK_OBJS | $FILTER
                fi
                ;;
              *)
                $ACTION $ALL_UNX_LIBS | $FILTER
                ;;
            esac
        fi
    fi
done

if [ "$FILTER" != "cat" ]; then rm -f $tmp_file; fi

exit

