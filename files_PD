#!/bin/sh
# $Id: files_PD,v 1.25 2002/01/18 19:57:01 schendel Exp $
# list (or otherwise examine) all Paradyn/Dyninst executable/library files

#SOS=sparc-sun-sunos4.1.3
SS7=sparc-sun-solaris2.7
SS8=sparc-sun-solaris2.8
XS6=i386-unknown-solaris2.6
XS7=i386-unknown-solaris2.7
SP2=rs6000-ibm-aix4.3
AIX=rs6000-ibm-aix4.2
#HPX=hppa1.1-hp-hpux
WNT=i386-unknown-nt4.0
LNX22=i386-unknown-linux2.2
LNX24=i386-unknown-linux2.4
IRX=mips-sgi-irix6.5
OSF=alpha-dec-osf4.0

ALL_PLATFORMS="$SS7 $SS8 $LNX22 $LNX24 $AIX $WNT"
ARCH_LIST=$PLATFORM

#USAGE="usage: files_PD [-a] [-w] [-i|-t] [-C[dlopvx]] [platform-list]\n\
#   -C_comps_: consider only the components matching the _comps_ key\n\
#     o: miscellaneous objects\n\
#     v: visualizers/visis\n\
USAGE="usage: files_PD [-a] [-w] [-W dir] [-i|-t] [-d|-l|-p|-x] [platform-list]\n\
   -a: consider all supported platforms (instead of optional platform-list)\n\
   -w: use developer's work repository (instead of default common repository)\n\
   -W: use specified directory as the repository\n\
   -i: show ident_PD information (instead of default file listing)\n\
   -t: only list stale files (i.e., those not dated today)\n\
   -d: DyninstAPI components only\n\
   -l: libraries/objects only\n\
   -p: Paradyn components only\n\
   -x: executables only\n\
   platform-list: one or more platforms (defaults to only current platform)\n\
(current PLATFORM=$PLATFORM)\n\
(supported platforms: $ALL_PLATFORMS)\n"

if [ "$PARADYN_ROOT" = "" ]; then
    P_ROOT="/p/paradyn"
else
    P_ROOT=`dirname $PARADYN_ROOT`
    # remove "/development/$USER" suffix, if present
    TMP=`dirname $P_ROOT`
    if [ `basename $TMP` = "development" ]; then
        P_ROOT=`dirname $TMP`
    fi
fi

FILTER="cat"

case "$PLATFORM" in
  "$SP2"|"$AIX"|"$OSF")
    ACTION="ls -oLF";;
  *)
    ACTION="ls -lGLF";;
esac

tmp_file="/tmp/.tmp_file"

X_COMPS=true
L_COMPS=true

while [ -n "$1" ]
do
  case "$1" in
    "-C")
        # consider only listed components
        ;;
    "-x")
        # consider only executables
        X_COMPS=true
        L_COMPS=
        ;;
    "-l")
        # consider only libraries
        X_COMPS=
        L_COMPS=true
        ;;
    "-d")
        # consider only dynInstAPI components
        X_COMPS=true
        L_COMPS=true
        D_COMPS=true
        ;;
    "-p")
        # consider only Paradyn components
        X_COMPS=
        L_COMPS=true
        D_COMPS=false
        ;;
    "-a")
        # consider all (current) platforms
        ARCH_LIST=$ALL_PLATFORMS
        ;;
    "-w")
        # use developer's work repository
        if [ -n "$USER" -a "$USER" != "paradyn" ]; then
            P_ROOT=$P_ROOT/development/$USER
        else
            echo "Sorry, no developer repository for USER=$USER"
        fi
        ;;
    "-W")
        # use specified work repository
        if [ -d "$2" ]; then
            P_ROOT=$2
            shift
        else
            echo "Sorry, $2 is not a repository"
        fi
        ;;
    "-i")
        # show ident info (assumes ident_PD is available)
        #ACTION=$P_ROOT/scripts/ident_PD
        IDENT_ACTION=true
        ;;
    "-t")
        # time to check or rebuild a stale file
        CHECK_FRESH=true
        ;;
    "-"*)
        #echo "Unrecognized flag: $1"
        PRINT_USAGE=true
        ;;
    *)
        # any non-flag arguments are platforms to consider
        ARCH_LIST=$*
        break
        ;;
  esac
  shift
done

if [ $PLATFORM = "$WNT" ]; then
    P_ROOT="/$P_ROOT"
fi

if [ -n "$PRINT_USAGE" ]; then
    printf "$USAGE"
    exit 1
fi

if [ -n "$IDENT_ACTION" ]; then
    if [ $PLATFORM = "$WNT" ]; then
        ACTION="sh $P_ROOT/scripts/ident_PD"
    else
        ACTION="$P_ROOT/scripts/ident_PD"
    fi
elif [ -n "$CHECK_FRESH" ]; then
    TODAY=`date '+%b %e'`
    date '+%b %e' > $tmp_file
    TODAY="($TODAY)"
    FILTER="grep -v -f $tmp_file"
fi

V_COMPS="rthist barChart phaseTable tableVisi tclVisi terrain"
V_COMPS_WNT="rthist.exe barChart.exe phaseTable.exe tableVisi.exe tclVisi.exe"
DYNINST_UNX_MUTTEES="testprogs/test1.mutatee_g++ testprogs/test1.mutatee_gcc testprogs/test2.mutatee_g++ testprogs/test2.mutatee_gcc testprogs/test3.mutatee_g++ testprogs/test3.mutatee_gcc testprogs/test4a.mutatee_g++ testprogs/test4a.mutatee_gcc testprogs/test4b.mutatee_g++ testprogs/test4b.mutatee_gcc testprogs/test5.mutatee_g++"
DYNINST_UNX_MUTTORS="testprogs/test1 testprogs/test2 testprogs/test3 testprogs/test4 testprogs/test5"

DYNINST_WNT_MUTTEES="testprogs/test1.mutatee_VC++.exe* testprogs/test1.mutatee_VC.exe* testprogs/test2.mutatee_VC++.exe* testprogs/test2.mutatee_VC.exe* testprogs/test3.mutatee_VC++.exe* testprogs/test3.mutatee_VC.exe* testprogs/test4a.mutatee_VC++.exe* testprogs/test4a.mutatee_VC.exe* testprogs/test4b.mutatee_VC++.exe* testprogs/test4b.mutatee_VC.exe* testprogs/test5.mutatee_VC++.exe*"
DYNINST_WNT_MUTTORS="testprogs/test1.exe testprogs/test2.exe testprogs/test3.exe testprogs/test4.exe testprogs/test5.exe"

PDN_UNX_EXES="paradyn paradynd* igen dyner $V_COMPS"
PDN_OSF_EXES="paradynd igen dyner"
PDN_WNT_EXES="paradyn.exe paradynd.exe igen.exe dyner.exe $V_COMPS_WNT"

ALL_API_OBJS="libdyninstAPI.* libdyninstAPI_RT*"
ALL_LIB_OBJS="libdyninstRT* libpdutil.a libpdutilOld.a libpdthread.a libvisi.a"
ALL_BLK_OBJS="DYNINSTendCode.o DYNINSTstartCode.o"
ALL_CPP_OBJS="libdyninstCP.*"
ALL_IRX_LIBS="libdyninstRT.so.1 libdyninstRT_n32.so.1 libpdutil.a libpdutilOld.a \
              libdyninstAPI.so libdyninstAPI_RT.so.1 libdyninstAPI_RT_n32.so.1"
ALL_OSF_LIBS="libdyninstRT.so.1 libpdutil.a libpdutilOld.a $ALL_API_OBJS"
        
# decide whether to include DyninstAPI components in library list
case "$D_COMPS" in
  false)
    ALL_UNX_LIBS="$ALL_LIB_OBJS"
    ALL_WNT_LIBS="libpdutil.lib libpdutilOld.lib libpdthread.lib libvisi.lib libdyninstRT.dll"
    ALL_UNX_EXES="$ALL_UNX_EXES $PDN_UNX_EXES"
    ALL_WNT_EXES="$ALL_WNT_EXES $PDN_WNT_EXES"
    ;;
  true)
    ALL_UNX_LIBS="$ALL_API_OBJS"
    ALL_WNT_LIBS="libdyninstAPI.lib libdyninstAPI_RT.dll"
    ALL_UNX_EXES="$ALL_UNX_EXES $DYNINST_UNX_MUTTORS $DYNINST_UNX_MUTTEES"
    ALL_WNT_EXES="$ALL_WNT_EXES $DYNINST_WNT_MUTTORS $DYNINST_WNT_MUTTEES"
    ;;
  *)
    ALL_UNX_LIBS="$ALL_LIB_OBJS $ALL_API_OBJS"
    ALL_WNT_LIBS="libpdutil.lib libpdutilOld.lib libpdthread.lib libvisi.lib libdyninstRT.dll libdyninstAPI.lib libdyninstAPI_RT.dll"
    ALL_UNX_EXES="$ALL_UNX_EXES $PDN_UNX_EXES $DYNINST_UNX_MUTTORS $DYNINST_UNX_MUTTEES"
    ALL_WNT_EXES="$ALL_WNT_EXES $PDN_WNT_EXES $DYNINST_WNT_MUTTORS $DYNINST_WNT_MUTTEES"
    ;;
esac

for PLATFORM in $ARCH_LIST
do
    printf "\nPLATFORM=%-22s %8s\n" $PLATFORM "$TODAY"
    if [ -n "$X_COMPS" ]; then
        PROGRAM_DEST=$P_ROOT/bin/$PLATFORM
        if [ ! -d $PROGRAM_DEST ]; then       
            echo "$PROGRAM_DEST does not exist!"
        else
            cd $PROGRAM_DEST ; echo "[7m$PROGRAM_DEST[m"
            case $PLATFORM in
              $OSF)
                $ACTION $ALL_OSF_EXES | $FILTER ;;
              $WNT)
                $ACTION $ALL_WNT_EXES | $FILTER ;;
              *)
                $ACTION $ALL_UNX_EXES | $FILTER ;;
            esac
        fi
    fi
    if [ -n "$L_COMPS" ]; then
        LIBRARY_DEST=$P_ROOT/lib/$PLATFORM
        if [ ! -d $LIBRARY_DEST ]; then       
            echo "$LIBRARY_DEST does not exist!"
        else
            cd $LIBRARY_DEST ; echo "[7m$LIBRARY_DEST[m"
            case $PLATFORM in
              $OSF)
                $ACTION $ALL_OSF_LIBS | $FILTER
                ;;
              $IRX)
                $ACTION $ALL_IRX_LIBS | $FILTER
                ;;
              $WNT)
                $ACTION $ALL_WNT_LIBS | $FILTER
                ;;
              $SP2)
                $ACTION $ALL_UNX_LIBS | $FILTER
                if [ "$D_COMPS" != "true" ]; then
                $ACTION $ALL_BLK_OBJS | $FILTER
                fi
                ;;
              *)
                $ACTION $ALL_UNX_LIBS | $FILTER
                ;;
            esac
        fi
    fi
done

if [ "$FILTER" != "cat" ]; then rm -f $tmp_file; fi

exit

